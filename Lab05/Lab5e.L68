00008000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 11/28/2022 6:59:14 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Lab5e
00000000                             3  * Written by : Gunteshwar Soin
00000000                             4  * Date       : 01/11/2022
00000000                             5  * Description: An example of a subroutine to compute the 
00000000                             6  *              average of a list of 16-bit numbers
00000000                             7  *-----------------------------------------------------------
00000000                             8          
00008000                             9          ORG     $8000
00008000                            10  
00008000                            11  **** Main Code *****
00008000                            12  
00008000  4879 0000803C             13  MAIN    PEA     LIST                 ;push pointer to list   
00008006  3F3C 0005                 14          MOVE.W  #LENGTH,-(A7)        ;push length of list
0000800A  6100 000A                 15          BSR     AVERAGE              ;calculate average  
0000800E  4FEF 0006                 16          LEA     6(A7),A7             ;remove arguments
00008012                            17          
00008012  FFFF FFFF                 18          SIMHALT
00008016                            19  
00008016                            20  
00008016                            21  **** Subroutine: AVERAGE(LENGTH,*LIST)  ****
00008016                            22  *          ARG1: LENGTH at 16(A7)          *
00008016                            23  *          ARG2: *LIST at 18(A7)           *
00008016                            24  *   Returns average in data register D0    *
00008016                            25  ********************************************
00008016                            26   
00008016  48E7 6040                 27  AVERAGE MOVEM.L   D1/D2/A1,-(A7)      ;save working registers
0000801A  4282                      28          CLR.L     D2                  ;set sum to zero     
0000801C  226F 0012                 29          MOVEA.L   18(A7),A1           ;initilize pointer to list
00008020  322F 0010                 30          MOVE.W    16(A7),D1           ;initiaize loop counter
00008024  6700 0008                 31  LOOP    BEQ       EXIT                ;counter = 0? yes, then exit
00008028  D459                      32          ADD.W     (A1)+,D2            ;no, add list item to sum
0000802A  5341                      33          SUB.W     #1,D1               ;decrement loop counter
0000802C  60F6                      34          BRA       LOOP                ;do it again!
0000802E  48C2                      35  EXIT    EXT.L     D2                  ;extend sum to form dividend
00008030  85EF 0010                 36          DIVS      16(A7),D2           ;compute quotient and remainder
00008034  3002                      37          MOVE.W    D2,D0               ;move quotient to D0
00008036  4CDF 0206                 38          MOVEM.L   (A7)+,D1/D2/A1      ;restore working registers
0000803A  4E75                      39          RTS
0000803C                            40  
0000803C                            41  
0000803C= 0093 0017 FFC8 0...       42  LIST    DC.W      147,23,-56,432,79   ;list of numbers to average
00008046  =00000005                 43  LENGTH  EQU       (*-LIST)/2          ;size of list in words
00008046                            44          
00008046                            45          END        MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AVERAGE             8016
EXIT                802E
LENGTH              5
LIST                803C
LOOP                8024
MAIN                8000
